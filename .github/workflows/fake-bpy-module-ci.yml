name: fake-bpy-module CI

on:
  push:
    branches:
      # Temporarily trigger only on "ci_testing" branch
      - ci_testing
      - master
  pull_request:

jobs:
  build_modules:
    name: Build modules
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        blender_version: ["2.78", "2.79", "2.80", "2.81", "2.82", "2.83"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Blender downloads cache
        uses: actions/cache@v2
        id: blender-bin-cache
        with:
          path: blender-bin
          key: blender-binaries-${{ runner.os }}-${{ matrix.blender_version }}-${{ hashFiles('**/tools/utils/download_blender.sh') }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Blender binary dependencies
        run: sudo apt-get install -y libglu1-mesa

      - name: Install fake-bpy-module tools
        run: sudo apt-get install -y pandoc

      - name: Download Blender files
        if: steps.blender-bin-cache.outputs.cache-hit != 'true'
        run: bash tools/utils/download_blender.sh ${{ matrix.blender_version }} blender-bin

        # alternatively to the github checkout, you can also use git.blender.org. See below.
      - name: Checkout Blender from Github
        uses: actions/checkout@v2
        with:
          repository: "blender/blender"
          path: blender

      - name: Set release version environment variable
        run: echo ::set-env name=RELEASE_VERSION::$(date +%Y%m%d)

      - name: Generate pip Packages
        run: bash tools/pip_package/build_pip_package.sh release ${{ matrix.blender_version }} ./blender ./blender-bin/blender-v${{ matrix.blender_version }}-bin

      - name: Test Generated Modules
        run: bash tests/run_tests.sh raw_modules
